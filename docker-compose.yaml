services:
  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - rabbitmq
      - backend
    networks:
      - my-network

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"   # RabbitMQ 메시지 큐 포트
      - "15672:15672" # RabbitMQ 관리 UI 포트 (http://localhost:15672/)
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: admin
    networks:
      - my-network

  mysql:
    image: mysql:8.4
    container_name: mysql-db
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: root_password
      MYSQL_DATABASE: testdb
      MYSQL_USER: user
      MYSQL_PASSWORD: somepassword
    networks:
      - my-network
  myapp:
    build:
      context: .
      dockerfile: Dockerfile
    image: myapp:1.0
    env_file:
    - .env
    restart: on-failure
    container_name: myapp-container
    ports:
      - "80:8080"
    depends_on:
      - mysql
      - redis
    networks:
      - my-network
    cpus: 0.5  # CPU 제한 (0.5 vCPU)
    mem_limit: "1g"  # 메모리 제한 (1GB)
  redis:
    image: redis:latest
    container_name: redis-container
    ports:
      - "6379:6379"
    networks:
      - my-network
networks:
  my-network:
